Script started on Tue 09 Feb 2016 11:27:15 PM EST
]0;ephe223@ephe223: ~/ProgrammingAssignments/Program1ephe223@ephe223:~/ProgrammingAssignments/Program1$ make memcheck
cc -std=c99 -Wall -g  -c -o kstring.o kstring.c
cc -std=c99 -Wall -g  -o test-full test-full.o kstring.o
valgrind --tool=memcheck --child-silent-after-fork=yes ./test-full
==12088== Memcheck, a memory error detector
==12088== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==12088== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==12088== Command: ./test-full
==12088== 
Test   0/ 26: kstralloc + kstrfree                               [32;1msucceeded[0m (1)
Test   1/ 26: kstralloc initializes memory to 0                  [32;1msucceeded[0m (1)
Test   2/ 26: kstralloc sets length                              [32;1msucceeded[0m (1)
Test   3/ 26: kstralloc sets length (big)                        [32;1msucceeded[0m (1)
Test   4/ 26: kstralloc sets length (0 bytes)                    [32;1msucceeded[0m (1)
Test   5/ 26: kstralloc aborts on allocation failure             [32;1msucceeded[0m (1)
Test   6/ 26: kstrlen matches allocation                         [32;1msucceeded[0m (1)
Test   7/ 26: kstrlen matches allocation (big)                   [32;1msucceeded[0m (1)
Test   8/ 26: kstrlen matches allocation (0 bytes)               [32;1msucceeded[0m (1)
Test   9/ 26: kstrfrom gives correct length                      [32;1msucceeded[0m (1)
Test  10/ 26: kstrfrom contains null byte                        [32;1msucceeded[0m (1)
Test  11/ 26: kstrfrom contains correct data                     [32;1msucceeded[0m (1)
Test  12/ 26: kstrfrom copies, not shares, data                  [32;1msucceeded[0m (1)
Test  13/ 26: kstrget fetches all indices correctly              [32;1msucceeded[0m (1)
Test  14/ 26: kstrget aborts when out of bounds                  [32;1msucceeded[0m (1)
Test  15/ 26: kstrput sets all indices correctly                 [32;1msucceeded[0m (1)
Test  16/ 26: kstrput aborts when out of bounds                  [32;1msucceeded[0m (1)
Test  17/ 26: kstrextend lengthens kstring                       [32;1msucceeded[0m (1)
Test  18/ 26: kstrextend does not shorten kstring                [32;1msucceeded[0m (1)
Test  19/ 26: kstrextend supports length-0 kstring               [32;1msucceeded[0m (1)
Test  20/ 26: kstrextend copies old contents                     [32;1msucceeded[0m (1)
Test  21/ 26: kstrextend extends with null bytes                 [32;1msucceeded[0m (1)
Test  22/ 26: kstrcat of two empty kstrings                      [32;1msucceeded[0m (1)
Test  23/ 26: kstrcat with empty kstring                         [32;1msucceeded[0m (1)
Test  24/ 26: kstrcat onto empty kstring                         [32;1msucceeded[0m (1)
Test  25/ 26: kstrcat has correct data                           [32;1msucceeded[0m (1)

RESULTS: 26 / 26 tests passed, 0 skipped, 0 failed
==12088== 
==12088== HEAP SUMMARY:
==12088==     in use at exit: 0 bytes in 0 blocks
==12088==   total heap usage: 33 allocs, 33 frees, 268,447,910 bytes allocated
==12088== 
==12088== All heap blocks were freed -- no leaks are possible
==12088== 
==12088== For counts of detected and suppressed errors, rerun with: -v
==12088== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;ephe223@ephe223: ~/ProgrammingAssignments/Program1ephe223@ephe223:~/ProgrammingAssignments/Program1$ make clean
rm -f test-abbrev test-full test-abbrev.o kstring.o core vgcore.*
]0;ephe223@ephe223: ~/ProgrammingAssignments/Program1ephe223@ephe223:~/ProgrammingAssignments/Program1$ exit
exit

Script done on Tue 09 Feb 2016 11:27:49 PM EST
